name: Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production
      tag:
        description: 'Tag to deploy (leave empty for "latest")'
        required: false
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to ${{ github.event.inputs.environment }}
    runs-on: ${{ github.event.inputs.environment }}
    
    steps:
      - name: Checkout repository (sparse - docker directory only)
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            docker
          sparse-checkout-cone-mode: false
        
      - name: Convert repository name to lowercase
        id: repo
        run: echo "name=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Verify image exists
        run: |
          echo "Checking if image exists: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}:${{ github.event.inputs.tag || 'latest' }}"
          docker manifest inspect ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}:${{ github.event.inputs.tag || 'latest' }}
          
      - name: Deploy to ${{ github.event.inputs.environment }}
        run: |
          echo "Deploying tag ${{ github.event.inputs.tag || 'latest' }} to ${{ github.event.inputs.environment }}"
          cd docker
          docker compose -f docker-compose.${{ github.event.inputs.environment }}.yml down || true
          docker compose -f docker-compose.${{ github.event.inputs.environment }}.yml pull
          docker compose -f docker-compose.${{ github.event.inputs.environment }}.yml up -d
        env:
          IMAGE_TAG: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}:${{ github.event.inputs.tag || 'latest' }}
